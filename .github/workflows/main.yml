name: main

on: [push]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.3
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: 12
      - uses: bahmutov/npm-install@v1.6.2
      - run: yarn type
      - run: yarn lint
      - run: yarn test --ci
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.MY_GITHUB_ACCESS_TOKEN }}

      - name: test list command
        run: yarn dev list
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.MY_GITHUB_ACCESS_TOKEN }}

      - name: test upload command
        run: |
          # generate a .env.test with a random XXX_TEST value
          export XXX_TEST=xxxtest$RANDOM
          echo "XXX_TEST=$XXX_TEST" >> .env.test

          # the command should not read this env var, only the content of the .env file
          export XXX_TEST=leak

          yarn dev upload -e ./.env.test
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.MY_GITHUB_ACCESS_TOKEN }}

      - run: yarn build
      - run: npm pack; mv github-secret-dotenv-*.tgz github-secret-dotenv.tgz

      - uses: actions/upload-artifact@v2
        with:
          name: env-test
          path: .env.test

      - uses: actions/upload-artifact@v2
        with:
          name: package
          path: github-secret-dotenv.tgz

  check-secrets:
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
      - name: check current secret XXX_TEST
        run: echo "x.${XXX_TEST:1}"
        env:
          XXX_TEST: ${{ secrets.XXX_TEST }}

      - uses: actions/download-artifact@v2
        with:
          name: env-test

      - name: check uploaded secret (notice that secret are usually not updated until the next run)
        run: cat .env.test | cut -d= -f2

  test-package:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: [12]
    runs-on: ${{ matrix.os }}
    needs: test-and-build

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: package
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: ${{ matrix.node }}
      - run: npm install ./github-secret-dotenv.tgz
      - run: npx --no-install github-secret-dotenv list --repository platane/github-secret-dotenv
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.MY_GITHUB_ACCESS_TOKEN }}

  publish-npm:
    runs-on: ubuntu-latest
    needs: test-package
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: package

      - uses: actions/setup-node@v1.4.4
        with:
          node-version: 12

      - run: npm publish github-secret-dotenv.tgz
        if: success() && github.ref == 'refs/heads/master'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
