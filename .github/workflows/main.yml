name: main

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.3
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: 12
      - uses: bahmutov/npm-install@v1.6.2
      - run: yarn type
      - run: yarn lint
      - run: yarn test --ci
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.MY_GITHUB_ACCESS_TOKEN }}

      - name: test list command
        run: yarn dev list
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.MY_GITHUB_ACCESS_TOKEN }}

      - name: test upload command
        run: |
          # generate a .env.test with a random XXX_TEST value
          export XXX_TEST=xxxtest$RANDOM
          echo "XXX_TEST=$XXX_TEST" >> .env.test
          echo "::set-output name=xxx-test::$(echo $XXX_TEST)"
          cat .env.test

          # the command should not read this env var, only the content of the .env file
          export XXX_TEST=leak

          yarn dev upload -e ./.env.test
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.MY_GITHUB_ACCESS_TOKEN }}

      - uses: actions/upload-artifact@v2
        with:
          name: env-test
          path: .env.test

  check-secret-after-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: env-test
      - name: check current secret XXX_TEST
        run: |
          XXX_TEST_UPLOADED=$(cat .env.test | cut -d= -f2)
          echo "upload: $XXX_TEST_UPLOADED, in secret: x.${XXX_TEST:1}"

          if [ "$XXX_TEST_UPLOADED" != "$XXX_TEST" ]; then
            exit 1
          fi
        env:
          XXX_TEST: ${{ secrets.XXX_TEST }}

  publish-npm:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v2.3.3
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: 12
      - uses: bahmutov/npm-install@v1.6.2
      - run: yarn build
      - uses: JS-DevTools/npm-publish@v1.4.0
        if: success() && github.ref == 'refs/heads/master'
        with:
          token: ${{ secrets.NPM_TOKEN }}

  test-npm-package:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: [12]
    runs-on: ${{ matrix.os }}
    needs: publish-npm
    steps:
      - uses: actions/setup-node@v1.4.4
        with:
          node-version: ${{ matrix.node }}
      - run: yarn add github-secret-dotenv
      - run: yarn github-secret-dotenv list --repository platane/github-secret-dotenv
        env:
          GITHUB_ACCESS_TOKEN: ${{ secrets.MY_GITHUB_ACCESS_TOKEN }}
